--------------------------------------------------------------------------------
TODO

DEBUGGER
    - rework package
        - positioning in next and error locator
            - invert locate
                - check locators (done: after, before) |<-
        - integrate own capture info
        - register state tracking custom state
        - why do I have a distinction between ExecutionLocation and spine?
    - bookmarks (shared, synchronized) and history (forked)

    document
        - memo handler in parse state

    consider later:
        - make location info class
        - document the "non-inspection" behaviour of beforeLocator

GUMPTION
    - use Array instead of [] for first and children in PE
    - insert $ in Java8 (rule-level only) (-> 544)

TODO FURTHER SMALL

- allow options in grammar files, namely for root and whitespace spec

- well formedness check (ford: WF -- can't loop without consuming)

- rename MemoHandler to MemoState

- scoped memoization
    - MemoScope
    - ScopedMemo

- tokenizers
    - token PE linked to a tokenizer + type
    - memoization window around position
    - error handling: an error over a token can become "unexpected X"
    - advantage: handles reserved identifiers

- syntax for custom operators ($name?)

- repeating locators (which can locate multiple locations if invoked repeatedly)

TODO FURTHER BIG

- better support for layering with smart tree-building that automatically rewrites trees
  (see D5)

- mini type system for captures? automatic AST classes generation?

- think about building in validation rules

- grammar composition & parameterization

TODO MUCH LATER

- make dumb expression faster via a backtracking DPDA

- think about how a parser could be retooled to parse html
  (which is lax in syntax) -> need to define bounding boxes

- applications: semi-parsing, JIT

--------------------------------------------------------------------------------