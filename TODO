--------------------------------------------------------------------------------
TODO

DEBUGGER
    - clarify parse output and parse input lifetime
    - must invoke parser with parseinput & config options

REWORK
    - syntax for custom operators ($name?)

GUMPTION
    - insert $ in Java8 (rule-level only) (-> 544)

TODO PLANNING

4 weeks + 1 (try to interleave):

w1: parse tree etc
w2: GUI model
w3: GUI
w4: presentation
w5: manual

TODO FURTHER SMALL

- keep an array instead of a tree in parsestate

- scope Registry to parser

- allow options in grammar files, namely for root and whitespace spec

- well formedness check (ford: WF -- can't loop without consuming)

- better way to exclude reserved identifiers or warn about them

- scoped memoization

TODO FURTHER BIG

- better error handling
    - "unexpected X" via rounding up token definitions?

- better memo handling
    - memoize tokens?
    - discard children memo when parent finishes

- generalize state handling to be able to define custom state
    - + how memoize can handle custom state, including automatically
      (chained hashs)

- better support for layering with smart tree-building that automatically rewrites trees
  (see D5)

- trees: topological sort

- mini type system for captures? automatic AST classes generation?

- error handler is sort of like error merge strategy, do it like that instead?

- think about building in validation rules

- grammar composition & parameterization

TODO MUCH LATER

- make dumb expression faster via a backtracking DPDA

- think about how a parser could be retooled to parser html
  (which is lax in syntax) -> need to define bounding boxes

--------------------------------------------------------------------------------